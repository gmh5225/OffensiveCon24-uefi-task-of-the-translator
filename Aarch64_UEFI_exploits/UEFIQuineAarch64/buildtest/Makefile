
#VPATH = gnu-efi:../../
GNUEFIDIR=../../gnu-efi
ARCH="aarch64"
ARCHPREFIX=aarch64-elf-
CC=$(ARCHPREFIX)gcc
AS=$(ARCHPREFIX)as
LD=$(ARCHPREFIX)ld
OBJCOPY=$(ARCHPREFIX)objcopy

all: arm64quine.efi

%.efi: %.so
	$(OBJCOPY) -j .text -j .sdata -j .data -j .rodata -j .dynamic -j .dynsym  -j .rel -j .rela -j .rel.* -j .rela.* -j .reloc --target efi-app-$(ARCH) --subsystem=10 arm64quine.so arm64quine.efi

#%.efi: %.so
#	$(OBJCOPY) -j .text -j .sdata -j .data -j .dynamic -j .dynsym -j .rel \
#		    -j .rela -j .rel.* -j .rela.* -j .rel* -j .rela* \
#		    -j .reloc $(FORMAT) $*.so $@

#%.efi.debug: %.so
#	$(OBJCOPY) -j .debug_info -j .debug_abbrev -j .debug_aranges -j .debug_line -j .debug_str -j .debug_ranges -j .note.gnu.build-id $(ARCH) arm64quine.so arm64quine.efi

arm64quine.so: arm64quine.o
	$(LD) -nostdlib -shared -Bsymbolic -L$(GNUEFIDIR)/$(ARCH)/lib -L$(GNUEFIDIR)/$(ARCH)/gnuefi -T$(GNUEFIDIR)/gnuefi/elf_$(ARCH)_efi.lds $(GNUEFIDIR)/$(ARCH)/gnuefi/crt0-efi-$(ARCH).o arm64quine.o -o arm64quine.so -lgnuefi -lefi

arm64quine.o:arm64quine.S 
	$(CC) -I$(GNUEFIDIR)/inc -g -fPIE -Wall -Wextra -Wno-pointer-sign -Werror -fpic -ffreestanding -fno-stack-protector -fno-stack-check -fshort-wchar -c $< -o $@

